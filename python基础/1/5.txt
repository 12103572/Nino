for 语句
作用：
    用来遍历可迭代对象的数据元素
    遍历：经历且只经历一遍

可迭代对象是指能依次获取数据元组的对象
　　可迭代对象包括：
    字符串str
    列表　list
    元组tuole
    字典　dict
    集合　set
    ...and
语法：
    for 变量列表 in可迭代对象：
        语句块１
    else:
        语句块２
说明：
    １．可迭代对象每次提供一个元素依次赋值给列表中的变量，赋值完毕
    后执行语句块１，重复执行此步骤，直到可迭代对象不能提供数据为止
    ２．可迭代对象迭代完成所有的元素后，执行else子句部分的语句块２，
    然后退出循环
    ３．else子句部分可以省略不写（同while一样）
    ４．当在循环内部用break终止循环时，else子句部分的语句不会执行


示例：
    s = "abcde"
    for ch in s:  # ch是自己定义的一个变量，用来绑定每一个字符
        print("ch--->", ch)
    else:
        print("遍历可迭代对象结束"）

练习：
    １．任意输入一段字符串，写程序做如下两件事：
    １）计算出空格的个数，并打印个数
        要求用for语句，不允许使用S。count方法
    ２）计算字符串中全部英文字符的个数
    注：英文字符的编码值为０～１２７，可用（ord（x））
    函数进行判断

练习：
    输入一个字符串，从尾向头输出这个字符串的字符
    如：
        请输入：hello
    打印输入：
         o
         l
         l
         e
         h

range 函数
    函数　　　　说明：
    range(stop) 用来生成０～stop区间的整数，知道stop为止
                不包含stop
    range(start, stop, step) 用来生成start~stop区间内的
        整数，知道stop为止（不包含stop）, 每个整数间隔
        step(step可以为负数，但不可以为０)
    作用：
        用来创建一个生成一系列整数的可迭代对象（也叫整数序列生成器）
    说明：
        此函数调用返回回来的对象可以用于for语句取值
    示例：
        range(4)  # 生成0,1,2,3,
        range(3, 6)  # 生成３，４，５
        range(1, 10, 2)  # 生成1,3,5,7,7
        range(5, 0, -2)  # 生成５，３，１
        rang(4, 0)  # 空

练习：
    1.用for语句打印１～２０的整数，打印在一行内
    2.求１００以内有哪些整数与自身＋１的乘积再对１１求余结果
    等于８？包含１００
        即：x*(x+1) % 11=8
    3.求１＋２＋．．．９９的和

for 语句的注意事项
    1.for 中range的调用次序：
        ＃请问此程序的打印结果是什么？为什么？
        i=6
        for x in range(1, i)
            print("x=", x, "i=", i)
            i -= 1
    结果循环５次，循环次数与i的变化没有关系
    2.for 语句内的变量可能不会被创建
        for x in range(4, 0):
            print(x)
        else:
            print("循环结束后，x=", x)  # 出错，此变量不存在
for 语句嵌套：
    与while 一样，for语句是语句（复合语句），它可以嵌套
    到其它复合语句中
    示例：
        for x in "abc":
            for y in "123":
                print(x+y)

练习：
    １．输入一个整数，代表正方形的宽度，打印如下正方形
    如：
        请输入：３
        打印：
            １２３
            １２３
            １２３
    ２．输入一个整数，代表正方形的宽度，打印如下正方形
    如：
        请输入：３
        打印：
            １２３
            ２３４
            ３４５

continue 语句
    问题：
        如何让程序不再往下执行，重新开始一次新的循环
    作用：
        用于循环语句（while, for　语句中），不再执行本次循环内
        continue之后的语句，重新开始一次新的循环
    说明：
        １．在for语句中执行continue语句，将会从可迭代对象中
        取下一个元素，绑定变量后再次进行循环
        ２．在while语句中执行continue语句，将会直接跳转到
        真值表达式处　，重新判断循环条件
    语法：
        continue

练习
    1.求１～１００之间所有不能被２，３，５，７中
    任意一个数整除的数的和

循环小结：
    while　语句
    for 　　语句
        字符串　str
        range() 调用后的返回值
    break　语句（终止循环）
    continue 语句（开始新的循环）

列表　list
    问题：
        如何将计算机运行的数据临时存入一个地方，同时又方便
        添加，删除，修改等操作？
什么是列表：
    列表是一种容器
    列表是可以被改变的序列
    列表是由一系列特定元素组成，元素与元素之间没有任何的
    关联关系他们之间有先后顺序关系

python序列类型简介
    字符串　str
    列表　list
    元组 tuple
    字符串 bytes
    字节数组　bytearray

创建空列表的字面值
    [] 创建空列表
如：
    L=[]  # L绑定一个空列表

创建非空列表的字面值
L=[1, 2, 3, 4]
L=['beijing', 'shanghai', 'shenzhen']
L=[1, "二"，３．１４，"four"]
L=[1, 2, [3.14, 3.2], 4]

列表的构造函数　list
list[] 　生成一个空的列表，等同于[]
list(iterable)  用可迭代对象创建一个列表
示例：
    L=list()  # L 绑定空列表
    L=list("hello")  # L=["h","e","l","l","o"]
    L=list(range(1, 10, 2))  # L=[1,3,5,7,9]

列表的运算：
算术运算：
    + += * *=

+用于拼接列表
x=[1, 2, 3]
y=[4, 5, 6]
z=x+y  # z=[1,2,3,4,5,6,]
z2=y+x  # z=[4,5,6,1,2,3,]

+=　用于将右侧可迭代对象的数据追加在原列表数据之后
    语法：
        x +=　可迭代对象
    如：
        x=[1, 2, 3, ]
        x += [4, 5, 6]
        x += "abc"
        x += range(10, 13)
    注：
        列表是可变容器，＋＝可改变原列表

＊　生成重复的列表
x=[1, 2]*3  # x=[1,2,1,2,1,2]

*=　用于生成重复的列表
x=[1, 2, 3]
x *= 2  # x=[1,2,3,1,2,3]

列表的比较
    运算符：
    < <= > >= != ==
    说明：
        列表的比较规则与字符串比较规则相同
        列表要求每两个元素能依次进行比较，否则会出现类型错误
    示例：
    x=[1.2, 3]
    y=[4, 5, 6]
    x != y  # True
    x < y  # True
    [1, 2, 3] < [1, 3, 2]  # True
    [1, "two"] > ["two", 1]  # TypeError

列表是可迭代对象：
l=[1, 3, 5, 10]
for x in l:
    print(x)

练习：
1.写一个程序，输入三行文字，将这三行文字保存于一个列表l中，
并打印这个列表
如：
    请输入：abc
    请输入：１２３
    请输入：你好
    生成如下列表：l=['abc‘,'123','你好']
    print(l)  # ['abc','123','你好']

2.写一个程序，让用户输入很多个正整数，当输入负数时，结束输入
将用户输入的数字存于列表中，
    1)然后打印这个列表
    2)计算出这些数字的和，打印出这些和
    如：
        请输入：１
        请输入：２
        请输入：３
        请输入：４
        请输入：－１
    打印:
        [1, 2, 3, 4]
        和是：１０

列表的　in / not in运算符
    判断一个值是否存在于列表中，如果存在返回True，否则返回False
    同字符串的 in　运算符，用于检查一个值是否存在于列表中

    示例:
    x=[1, 'two', 3, '四']
    3 in x  # True
    1 in x  # True
    ５not in x  # True
    '四' not in x  # False

练习：
    1.写程序打印九九乘法表
    1*1=1
    1*2=2 2*2=4
    ....
    1*9=9...    9*9=81
    2.写一个程序，任意输入一个整数，判断这个数是否为素数
    素数(也叫质数)，是只能被１和自身整除的正整数
    如：２　３　５　７　１１　１３　１７　１９
    提示：
        用排除法：当判断x是否为素数时，要让x分别除以
        ２，３，４．．．x-1, 只要有依次被整除，则x不是素数
        否则x是素数
    3.输入一个整数，此整数代表树干的高度，打印一颗如下形状
    的圣诞树
        如：
            输入：２
        打印：
          *
         ***
          *
          *
        如
         ：
            输入：３
        打印：
          *
         ***
        *****
          *
          *
          *

4.算出１００～９９９范围内的水仙花（Narcissisitic Number）
水仙花数是指百位的３次方＋十位的３次方＋个位的３次方
等于原数的整数
    如：
        153=1**3+5**3+3**3
    答案：
        153, 370, .....
