
<<python语言基础＞＞
python简介
    诞生：
        创建人：Ｇuido Van Rossum(荷兰人)
        时间：　1989年圣诞节期间
    python的应用领域
        系统运维
        网络编程（搜索引擎，爬虫，服务器编程）
        科学计算
        人工智能，机器人
        web开发
        云计算
        大数据及数据库编程
        教育
        游戏，图像
        其它
python语言的优缺点
    优点：
        面向对象（java,c++,python,）
        免费
        可移植（运行在Ｗindows,Linux,Unix..）
        可混合编程（c/c++/java/.net）
        简单易学易用
        开发效率高
        应用领域广泛
        开源
    缺点：
        与c/c++相比，执行速度不够快
        不能封闭源代码

python的官网:
    http://www.python.org

python的安装
    1.先从官网下载相应的版本
    2.按说明点＂下一步＂安装
    兼容的操作系统：
        Ｗindows/Unix(Mac OS　IOS AIX)/Linux(安卓)
    python的版本：
        Python 2.7(2020年结束维护)
        Python 3.5(当前教学版本)
        python 3.7(最近稳定版))
        Python 3.8(最新，正在开发中的版本)

python 的运行：
    python/java 解释执行器类型   c/c++编译型语言--->CPU
        CPython     (C语言开发的)我们用最多的
        $ python 3
        Jython      (java语言开发)
        IronPython  (.net开发的)
        PyPy        (Python开发的)

第一个python程序
    编写:hello.py
    保存快捷键:　ctrl + s

执行python程序
    在终端命令下输入如下命令：
        第一种执行方式：
            $ cd <当前hello.py所在的路径>
            $ python3 hello.py
        第二种执行方式：
            $ cd <当前hello.py的路径＞
            $ chmod +x hello.py #　为hello.py添加执行权限
            #　在hello.py的前一行加入如下注释：
            #! /usr/bin/python3
            $ ./hello.py  # 执行当前程序

        1.编写　xxx.py文件
            $ code xxx.py文件
        2.执行python程序
            $ python3       xxx.py
                ^               ^
            解释执行器　　　   被解释的文件
        3.执行python程序方法2
        1）　修改xxx.py　在第一行写入
            #! /usr/bin/python3
        2) 为xxx.py添加执行属性
            chmod +x xxx.py
            注：chmod命令用来添加或修改文件的权限
        3）　执行
           $ ./xxx.py


常用的程序文件后缀
    .py 　python文件后缀
    .c    Ｃ语言文件的后缀
    .cpp/.cxx/.xx/.CC  Ｃ++语言的后缀
    .java  java语言文件的后缀

python的交互执行模式：
    进入交互模式：
        $ python3 <回车＞
        >>>
    退出python3交互模式
        >>> quit() <回车＞
        >>> exit() <回车>
        >>> ctrl + d <输入文件结束符>
python 的注释
    python注释是以　# 开头，直至行尾
    作用：
        让注释内容不参加解释执行
    VS code 下注释的快捷键：
        ctrl + /  或　command + /(仅Mac OS)

python程序的组成
    程序由模块组成的
    模块由数据，语句，函数，类等组成
    语句包含表达式
    表达式建立并处理数据对象

python 核心数据类型
    数字类型（整型，副典型，复数，布尔型）
    字符串　str
    列表　list
    ...

整型数 　int
    整型数是不带有小数部分的数字，包括自然数，0和负整数
        如：　－5，　100，0，99999
整型数的字面值表示方式：
    十进制表示方式：
    如：
        10
        200
        99999999999999999999999999999999999999999999999
        －5
        －9999999999999999999999999999999999999999999999999
    二进制表示方式（0b开头，后跟0或1）：
        0b111  #7
        0b1010 #10
    八进制方式表示（0０开头，后跟0～7）
        0o177  #127
        0o11  #9
    十六进制方式表示（0x开头，后跟0～9，a~f或者Ａ～Ｆ）
        0x11 #17
        0xFF #255
        0x64 #100
        0x1234ABCD   #305441741

练习：
    计算：
        0xffff      表示多少？  65535（二进制中16位的最大数）
        0xffffffff  表示多少？  4294967295（二进制中32位的最大数）
        0b1001      表示多少？  9
        0o71        表示多少？  57

浮点型数　float
    浮点型数是带有小数部分的数字（小数部分可以是0）
    浮点数的字面值表示方式：
    小数表示法：
            3.14　　3.1　　3.0　　3.　　0.14　.14
    科学计数法：
        格式：
            小数e/E(正负号)指数
        如：
            6.18E-1 # 等同于0.618
            2.9979e8 #等同于299790000.0
复数型　complex
    分为两部分
        实部real
        虚部image
    虚部以j或J结尾

    复数的字面值
        1j #i
        (2j)
        1+1j
        1-1j
        (-100+200j)
布尔型数　bool
    用来表示真和假两种状态的类型
        True表示真　（条件满足或成立）
        False表示假　（条件不满足或不成立）
    说明：
        True   的值为1
        False  的值为0
空值对象    None
    None 是一个表示不存在的特殊对象

    作用：
        用来占位
        变量解除绑定
表达式和运算符（也叫操作符）
表达式  expression
    由数字或数字和运算符组成
    作用：
        通常让计算机做一些事情并返回结果
    示例：
        1 + 2   #创建一个整数3
        None
        1 +5 > 2 + 3

算数运算符
    +   加法
    -   减法
    *   乘法
    /   除法
    //  地板除floordiv
    %   求余
    **  幂运算

/  除法
    除法得到的书是浮点型数，通常不会丢弃小数部分
    1 / 3   得到　0.3333333333
    8 / 2   得到　4.0
// 地板除
    除的结果去掉小数部分向下取整
    7　/　3     得到　2.3333333333333335
    7　//　3    得到　2
    8　//　3    得到　2
    3.25　//　1.5　得到　2.0

% 　求余
　　7　％　3    得到　1

**　幂运算
    格式：
        x ** y
        意为　x 的 y次方
    4　**　2        得到16
    3.0　**　4.0    得到    81.0
    5.6　**　1.418  得到    11.506165654866916

练习：
    1.一个商店买西瓜7元一个，你带131元钱能买到几个西瓜？
        找零多少钱？
        答案：131　//　7　得　18，131　％　7　找零 5　元
    2.一个学生毕业后的薪资是10000元，每年涨20％　十年后它
        的薪资是多少？
        (1+0.2)　**　10　*　10000　得　61917.364223999975

运算符的优先级
    **
    *　/    //  %
    +　-
    示例：
        1　+　3　*　3　**　2　+　4//2　　得　30
    括号分组子表达式
        用（）可以将表达式分组，（）内部的表达式先进行计算
        如：
            2 * ( 3 * ( 4 + 8 ) - 1) == 70

混合类型自动升级
    1　+　2.14  返回结果是：　3.14
    1　+　3.0   返回结果是：　4.0

基本输出函数    print
    格式：
        print(要打印的表达式)
    作用：
        把程序的运行结果打印在终端上
    ctrl + shift + t 多开一个终端

练习：
    1.写程序，在终端输出图形：
        ********
        *      *
        *      *
        ********
    2.已知矩形的长边长6cm，短边长4cm，写程序求出周长和面积

变量
    什么是变量
        变量是关联一个对象的标识符
        变量可以绑定一个对象，并可以通过变量名来使用这个对象

    标识符的命令方法：
        标识符必须为字母或下划线开头，后跟字母或下划线或数字
        不能使用python的关键字

    合法的变量名举例:
        a A a1 bbbb  _aaaa  _ABC var

    不合法的变量名举例:
        1a 123 $abc +a  -a @avf a#b

    变量名区分大小写
        aa AA　是两个不同的变量名

python中的关键字：
    True,False,None,is del,if,elif, else
    pass not...

赋值语句    statements
    ＝
    赋值语句的语法：
        变量名　＝　表达式
        或
        变量名1　＝　变量名2　＝　变量名3　＝　表达式　
        或
        变量名1，变量名2，变量名3　＝　表达式1，表达式2，表达式3
    作用：
        创建一个变量或改变一个变量绑定的数据
    赋值语句说明：
        当变量不存在时，创建该变量，同时将变量绑定在这个对象上
        当变量存在时，改变此变量绑定（关联）的对象
        一个变量只能绑定一个对象
        两个变量可以同时绑定同一个对象
    示例：
        a = 10000  #创建变量a绑定在10000这个对象上
        b = 20　　　#创建变量b绑定在20上
        a = 10     #将原变量a重新绑定在10上
        a = 10000
        b = a # b变量绑定在a变量绑定对象上
python中　　关联／绑定／引用　　的含义
    在python中，变量没有类型
    关联／绑定／引用都是指变量和一个对象的关联关系
    任何变量一定会绑定一个对象

python中的自动化内存管理(RAM)
    示例:
        a = 10000
        b = 20000
        a = a + b
        c = a

练习：
    指定一个圆的半径　r = 3　厘米
        1.　计算周长是多少　    c = 2 * pi *r
        2.　计算面积是多少      a = pi * r **2

练习：
    变量交换练习：
        已知有两个变量
            a 绑定　10000
            b 绑定　20000
        问：在不创建任何新对象的情况下，如何让a 和　b
            交换绑定的对象

在交互模式下，查看当前作用域内的所有变量
    help() 函数用来查看绑定或运行时的信息
    >>> help ("__main__")
    退出键：　q

del 语句
    作用：
        用于删除变量，同时，接触与对象的关联，如果可能则释放对象
    语法：
        del 变量名1,变量名2...
    如:
    x,y,z = 1,2,3
    del x
    del y,z

is / is not 运算符
    作用：
        判断两个对象是否是同一个对象，当时同一个对象时，返回True
        否则返回False
        is not 的作用与　is 相反　
    语法：
        x is y
        x is not y
        注：x,y代表对象

小整数对象池
    Cpython中，整数－５至　２５６的数永远存在于小整数对象池中，
    不会释放并可重复使用

id(x) 函数
    作用：
        返回一个对象在内存中的地址

练习：
    １　在终端输出图形：
            *
           ***
          *****
         *******
    2.  中国古代的称是１６两一斤，请问古代的２１６两是古代的几斤几两？
        写程序打印出来
    3.  从凌晨０：０：０计时，到现在过了６３３２０秒
        请问现在是几时，几分，几秒？
        写程序打印出来
        提示：
            可以用地板除和求余实现
    4. 温度转换（华氏温度／摄氏温度／开式温度）
        算法：
            摄氏温度　＝５．０／９．０＊（华氏温度　－　３２）
            开氏温度　＝摄氏温度　＋　２７３．１５
        问：
            １００华氏温度转为摄氏温度是多少度？
            转为开氏温度是多少度？




